"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseBuffer = exports.constructors = void 0;
const lodash_1 = require("lodash");
const smart_buffer_1 = require("smart-buffer");
const buffer_reader_1 = require("./buffer-reader");
const constants_1 = require("./constants");
const atr_record_1 = require("./records/atr.record");
const bps_record_1 = require("./records/bps.record");
const dtr_record_1 = require("./records/dtr.record");
const eps_record_1 = require("./records/eps.record");
const far_record_1 = require("./records/far.record");
const ftr_record_1 = require("./records/ftr.record");
const gdr_record_1 = require("./records/gdr.record");
const hbr_record_1 = require("./records/hbr.record");
const mir_record_1 = require("./records/mir.record");
const mpr_record_1 = require("./records/mpr.record");
const mrr_record_1 = require("./records/mrr.record");
const pcr_record_1 = require("./records/pcr.record");
const pgr_record_1 = require("./records/pgr.record");
const pir_record_1 = require("./records/pir.record");
const plr_record_1 = require("./records/plr.record");
const pmr_record_1 = require("./records/pmr.record");
const prr_record_1 = require("./records/prr.record");
const ptr_record_1 = require("./records/ptr.record");
const rdr_record_1 = require("./records/rdr.record");
const sbr_record_1 = require("./records/sbr.record");
const sdr_record_1 = require("./records/sdr.record");
const tsr_record_1 = require("./records/tsr.record");
const wcr_record_1 = require("./records/wcr.record");
const wir_record_1 = require("./records/wir.record");
const wrr_record_1 = require("./records/wrr.record");
const stdf_record_1 = require("./stdf-record");
exports.constructors = {
    [constants_1.EnumRecordType.unknown]: stdf_record_1.StdfRecord,
    [constants_1.EnumRecordType.far]: far_record_1.FarRecord,
    [constants_1.EnumRecordType.atr]: atr_record_1.AtrRecord,
    [constants_1.EnumRecordType.mir]: mir_record_1.MirRecord,
    [constants_1.EnumRecordType.mrr]: mrr_record_1.MrrRecord,
    [constants_1.EnumRecordType.pcr]: pcr_record_1.PcrRecord,
    [constants_1.EnumRecordType.hbr]: hbr_record_1.HbrRecord,
    [constants_1.EnumRecordType.sbr]: sbr_record_1.SbrRecord,
    [constants_1.EnumRecordType.pmr]: pmr_record_1.PmrRecord,
    [constants_1.EnumRecordType.pgr]: pgr_record_1.PgrRecord,
    [constants_1.EnumRecordType.plr]: plr_record_1.PlrRecord,
    [constants_1.EnumRecordType.rdr]: rdr_record_1.RdrRecord,
    [constants_1.EnumRecordType.sdr]: sdr_record_1.SdrRecord,
    [constants_1.EnumRecordType.wir]: wir_record_1.WirRecord,
    [constants_1.EnumRecordType.wrr]: wrr_record_1.WrrRecord,
    [constants_1.EnumRecordType.wcr]: wcr_record_1.WcrRecord,
    [constants_1.EnumRecordType.pir]: pir_record_1.PirRecord,
    [constants_1.EnumRecordType.prr]: prr_record_1.PrrRecord,
    [constants_1.EnumRecordType.tsr]: tsr_record_1.TsrRecord,
    [constants_1.EnumRecordType.ptr]: ptr_record_1.PtrRecord,
    [constants_1.EnumRecordType.mpr]: mpr_record_1.MprRecord,
    [constants_1.EnumRecordType.ftr]: ftr_record_1.FtrRecord,
    [constants_1.EnumRecordType.bps]: bps_record_1.BpsRecord,
    [constants_1.EnumRecordType.eps]: eps_record_1.EpsRecord,
    [constants_1.EnumRecordType.gdr]: gdr_record_1.GdrRecord,
    [constants_1.EnumRecordType.dtr]: dtr_record_1.DtrRecord,
};
function parseBuffer(buffer, endian) {
    const buf = smart_buffer_1.SmartBuffer.fromBuffer(buffer);
    const typeId = buf.readUInt8();
    const sub = buf.readUInt8();
    const data = buf.readBuffer();
    const bufferReader = new buffer_reader_1.BufferReader(data, endian);
    const type = (0, lodash_1.get)(constants_1.RecordCode, [typeId, sub]);
    if (!type)
        return new stdf_record_1.StdfRecord(typeId, sub, bufferReader);
    const constructor = (0, lodash_1.get)(exports.constructors, type);
    if (!constructor)
        return new stdf_record_1.StdfRecord(typeId, sub, bufferReader);
    return Reflect.construct(constructor, [typeId, sub, bufferReader]);
}
exports.parseBuffer = parseBuffer;
//# sourceMappingURL=record-factory.js.map