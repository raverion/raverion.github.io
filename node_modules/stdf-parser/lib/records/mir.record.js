"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MirRecord = void 0;
const stdf_record_1 = require("../stdf-record");
class MirRecord extends stdf_record_1.StdfRecord {
    setupTime;
    startTime;
    statNum;
    modeCode;
    rtstCode;
    protCode;
    burnTime;
    cmodCode;
    lotId;
    partType;
    nodeName;
    testerType;
    jobNam;
    jobRevison;
    subLotId;
    operName;
    execType;
    execVar;
    testCode;
    testTemp;
    userTxt;
    auxFile;
    pkgType;
    familyId;
    dateCode;
    facilId;
    floorId;
    procId;
    operFrq;
    specName;
    specVer;
    flowId;
    setupId;
    designRevision;
    engId;
    romCode;
    serialNumber;
    suprName;
    constructor(type, sub, br) {
        super(type, sub, br);
        this.setupTime = br.readDate();
        this.startTime = br.readDate();
        this.statNum = br.readUInt8();
        this.modeCode = br.readChar()?.trim();
        this.rtstCode = br.readChar()?.trim();
        this.protCode = br.readChar();
        this.burnTime = br.readUInt16();
        this.cmodCode = br.readChar()?.trim();
        this.lotId = br.readVarString();
        this.partType = br.readVarChar();
        this.nodeName = br.readVarChar();
        this.testerType = br.readVarChar();
        this.jobNam = br.readVarChar();
        this.jobRevison = br.readVarChar();
        this.subLotId = br.readVarChar();
        this.operName = br.readVarChar();
        this.execType = br.readVarChar();
        this.execVar = br.readVarChar();
        this.testCode = br.readVarChar();
        this.testTemp = br.readVarChar();
        this.userTxt = br.readVarChar();
        this.auxFile = br.readVarChar();
        this.pkgType = br.readVarChar();
        this.familyId = br.readVarChar();
        this.dateCode = br.readVarChar();
        this.facilId = br.readVarChar();
        this.floorId = br.readVarChar();
        this.procId = br.readVarChar();
        this.operFrq = br.readVarChar();
        this.specName = br.readVarChar();
        this.specVer = br.readVarChar();
        this.flowId = br.readVarChar();
        this.setupId = br.readVarChar();
        this.designRevision = br.readVarChar();
        this.engId = br.readVarChar();
        this.romCode = br.readVarChar();
        this.serialNumber = br.readVarChar();
        this.suprName = br.readVarChar();
    }
}
exports.MirRecord = MirRecord;
//# sourceMappingURL=mir.record.js.map