"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PrrRecord = exports.EnumPrrPartFlag = void 0;
const stdf_record_1 = require("../stdf-record");
var EnumPrrPartFlag;
(function (EnumPrrPartFlag) {
    EnumPrrPartFlag[EnumPrrPartFlag["notNewPartId"] = 1] = "notNewPartId";
    EnumPrrPartFlag[EnumPrrPartFlag["notNewXY"] = 2] = "notNewXY";
    EnumPrrPartFlag[EnumPrrPartFlag["abnormalEnd"] = 4] = "abnormalEnd";
    EnumPrrPartFlag[EnumPrrPartFlag["failedTest"] = 8] = "failedTest";
    EnumPrrPartFlag[EnumPrrPartFlag["noPassFail"] = 16] = "noPassFail";
})(EnumPrrPartFlag || (exports.EnumPrrPartFlag = EnumPrrPartFlag = {}));
class PrrRecord extends stdf_record_1.StdfRecord {
    headNum;
    siteNum;
    partFlag;
    numTest;
    hardBin;
    softBin;
    xCoord;
    yCoord;
    testTime;
    partId;
    partText;
    partFix;
    constructor(type, sub, br) {
        super(type, sub, br);
        this.headNum = br.readUInt8();
        this.siteNum = br.readUInt8();
        this.partFlag = br.readUInt8();
        this.numTest = br.readUInt16();
        this.hardBin = br.readUInt16();
        this.softBin = br.readUInt16();
        this.xCoord = br.readInt16();
        this.yCoord = br.readInt16();
        this.testTime = br.readUInt32();
        this.partId = br.readVarChar();
        this.partText = br.readVarChar();
        this.partFix = br.readVarBuffer();
    }
}
exports.PrrRecord = PrrRecord;
//# sourceMappingURL=prr.record.js.map