{"ast":null,"code":"import jsPDF from \"jspdf\";\nexport const generatePDF = (inputData, selectedOption) => {\n  const doc = new jsPDF();\n\n  // Load the image file\n  const imgData = require(\"./MFTS_logo.png\");\n  // Add the image to the PDF document\n  doc.addImage(imgData, \"PNG\", 50,\n  // X coordinate of the image\n  10,\n  // Y coordinate of the image\n  96,\n  // Width of the image\n  30 // Height of the image\n  );\n\n  // Set the font and font size\n  doc.setFont(\"helvetica\");\n  doc.setFontSize(11);\n\n  // Add content to the PDF document using the input data\n  doc.text(`To: ${inputData.To}`, 10, 55);\n  doc.text(`Address: ${inputData.Address}`, 10, 60);\n  doc.text(`Date: ${inputData.Date}`, 150, 55);\n  doc.text(`Quote/Invoice#: ${inputData.DocNum}`, 150, 60);\n  doc.setFontSize(14);\n  if (selectedOption === \"ACKRECEIPT\") {\n    doc.text(`ACKNOWLEDGEMENT RECEIPT`, 70, 75);\n  } else if (selectedOption === \"INV\") {\n    doc.text(`INVOICE`, 95, 75);\n  } else if (selectedOption === \"QUOTE\") {\n    doc.text(`QUOTATION`, 90, 75);\n  } else if (selectedOption === \"SOA\") {\n    doc.text(`STATEMENT OF ACCOUNT`, 70, 75);\n  } else if (selectedOption === \"PAYROLL\") {\n    doc.text(`PAYROLL`, 70, 75);\n  }\n  // ...\n\n  // Save the PDF document\n  doc.save(`${selectedOption} - ${inputData.DocNum} - ${inputData.Date} - ${inputData.To}.pdf`);\n};\nexport const handleGeneratePDF = selectedOption => {\n  // Prepare the input data for the PDF document\n  const inputData = {\n    To: inputFields[0].To,\n    Address: inputFields[1].Address,\n    Date: inputFields[2].Date,\n    DocNum: inputFields[3].DocNum\n\n    // ...\n  };\n\n  // Call the generatePDF function\n  generatePDF(inputData, selectedOption);\n};","map":{"version":3,"names":["jsPDF","generatePDF","inputData","selectedOption","doc","imgData","require","addImage","setFont","setFontSize","text","To","Address","Date","DocNum","save","handleGeneratePDF","inputFields"],"sources":["/Users/rejaverion/Documents/mfts_docugen/src/generateDoc.js"],"sourcesContent":["import jsPDF from \"jspdf\";\n\nexport const generatePDF = (inputData, selectedOption) => {\n  const doc = new jsPDF();\n\n  // Load the image file\n  const imgData = require(\"./MFTS_logo.png\");\n  // Add the image to the PDF document\n  doc.addImage(\n    imgData,\n    \"PNG\",\n    50, // X coordinate of the image\n    10, // Y coordinate of the image\n    96, // Width of the image\n    30 // Height of the image\n  );\n\n  // Set the font and font size\n  doc.setFont(\"helvetica\");\n  doc.setFontSize(11);\n\n  // Add content to the PDF document using the input data\n  doc.text(`To: ${inputData.To}`, 10, 55);\n  doc.text(`Address: ${inputData.Address}`, 10, 60);\n  doc.text(`Date: ${inputData.Date}`, 150, 55);\n  doc.text(`Quote/Invoice#: ${inputData.DocNum}`, 150, 60);\n\n  doc.setFontSize(14);\n  if (selectedOption === \"ACKRECEIPT\") {\n    doc.text(`ACKNOWLEDGEMENT RECEIPT`, 70, 75);\n  } else if (selectedOption === \"INV\") {\n    doc.text(`INVOICE`, 95, 75);\n  } else if (selectedOption === \"QUOTE\") {\n    doc.text(`QUOTATION`, 90, 75);\n  } else if (selectedOption === \"SOA\") {\n    doc.text(`STATEMENT OF ACCOUNT`, 70, 75);\n  } else if (selectedOption === \"PAYROLL\") {\n    doc.text(`PAYROLL`, 70, 75);\n  }\n  // ...\n\n  // Save the PDF document\n  doc.save(\n    `${selectedOption} - ${inputData.DocNum} - ${inputData.Date} - ${inputData.To}.pdf`\n  );\n};\n\nexport const handleGeneratePDF = (selectedOption) => {\n  // Prepare the input data for the PDF document\n  const inputData = {\n    To: inputFields[0].To,\n    Address: inputFields[1].Address,\n    Date: inputFields[2].Date,\n    DocNum: inputFields[3].DocNum,\n\n    // ...\n  };\n\n  // Call the generatePDF function\n  generatePDF(inputData, selectedOption);\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,WAAW,GAAGA,CAACC,SAAS,EAAEC,cAAc,KAAK;EACxD,MAAMC,GAAG,GAAG,IAAIJ,KAAK,EAAE;;EAEvB;EACA,MAAMK,OAAO,GAAGC,OAAO,CAAC,iBAAiB,CAAC;EAC1C;EACAF,GAAG,CAACG,QAAQ,CACVF,OAAO,EACP,KAAK,EACL,EAAE;EAAE;EACJ,EAAE;EAAE;EACJ,EAAE;EAAE;EACJ,EAAE,CAAC;EAAA,CACJ;;EAED;EACAD,GAAG,CAACI,OAAO,CAAC,WAAW,CAAC;EACxBJ,GAAG,CAACK,WAAW,CAAC,EAAE,CAAC;;EAEnB;EACAL,GAAG,CAACM,IAAI,CAAE,OAAMR,SAAS,CAACS,EAAG,EAAC,EAAE,EAAE,EAAE,EAAE,CAAC;EACvCP,GAAG,CAACM,IAAI,CAAE,YAAWR,SAAS,CAACU,OAAQ,EAAC,EAAE,EAAE,EAAE,EAAE,CAAC;EACjDR,GAAG,CAACM,IAAI,CAAE,SAAQR,SAAS,CAACW,IAAK,EAAC,EAAE,GAAG,EAAE,EAAE,CAAC;EAC5CT,GAAG,CAACM,IAAI,CAAE,mBAAkBR,SAAS,CAACY,MAAO,EAAC,EAAE,GAAG,EAAE,EAAE,CAAC;EAExDV,GAAG,CAACK,WAAW,CAAC,EAAE,CAAC;EACnB,IAAIN,cAAc,KAAK,YAAY,EAAE;IACnCC,GAAG,CAACM,IAAI,CAAE,yBAAwB,EAAE,EAAE,EAAE,EAAE,CAAC;EAC7C,CAAC,MAAM,IAAIP,cAAc,KAAK,KAAK,EAAE;IACnCC,GAAG,CAACM,IAAI,CAAE,SAAQ,EAAE,EAAE,EAAE,EAAE,CAAC;EAC7B,CAAC,MAAM,IAAIP,cAAc,KAAK,OAAO,EAAE;IACrCC,GAAG,CAACM,IAAI,CAAE,WAAU,EAAE,EAAE,EAAE,EAAE,CAAC;EAC/B,CAAC,MAAM,IAAIP,cAAc,KAAK,KAAK,EAAE;IACnCC,GAAG,CAACM,IAAI,CAAE,sBAAqB,EAAE,EAAE,EAAE,EAAE,CAAC;EAC1C,CAAC,MAAM,IAAIP,cAAc,KAAK,SAAS,EAAE;IACvCC,GAAG,CAACM,IAAI,CAAE,SAAQ,EAAE,EAAE,EAAE,EAAE,CAAC;EAC7B;EACA;;EAEA;EACAN,GAAG,CAACW,IAAI,CACL,GAAEZ,cAAe,MAAKD,SAAS,CAACY,MAAO,MAAKZ,SAAS,CAACW,IAAK,MAAKX,SAAS,CAACS,EAAG,MAAK,CACpF;AACH,CAAC;AAED,OAAO,MAAMK,iBAAiB,GAAIb,cAAc,IAAK;EACnD;EACA,MAAMD,SAAS,GAAG;IAChBS,EAAE,EAAEM,WAAW,CAAC,CAAC,CAAC,CAACN,EAAE;IACrBC,OAAO,EAAEK,WAAW,CAAC,CAAC,CAAC,CAACL,OAAO;IAC/BC,IAAI,EAAEI,WAAW,CAAC,CAAC,CAAC,CAACJ,IAAI;IACzBC,MAAM,EAAEG,WAAW,CAAC,CAAC,CAAC,CAACH;;IAEvB;EACF,CAAC;;EAED;EACAb,WAAW,CAACC,SAAS,EAAEC,cAAc,CAAC;AACxC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}