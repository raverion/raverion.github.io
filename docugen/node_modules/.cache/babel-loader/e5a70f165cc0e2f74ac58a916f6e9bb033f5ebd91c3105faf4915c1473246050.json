{"ast":null,"code":"import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nexport const generatePDF = (selectedOption, inputData, tableData) => {\n  const doc = new jsPDF();\n\n  // Load the image file\n  const imgData = require(\"./MFTS_logo.png\");\n  // Add the image to the PDF document\n  doc.addImage(imgData, \"PNG\", 55,\n  // X coordinate of the image\n  10,\n  // Y coordinate of the image\n  96,\n  // Width of the image\n  30 // Height of the image\n  );\n\n  // Set the font and font size\n  doc.setFont(\"helvetica\");\n  doc.setFontSize(11);\n\n  // Add content to the PDF document using the input data\n  doc.text(`To: ${inputData.To}`, 10, 55);\n  doc.text(`Address: ${inputData.Address}`, 10, 60);\n  doc.text(`Date: ${inputData.Date}`, 150, 55);\n  doc.text(`Quote/Invoice#: ${inputData.DocNum}`, 150, 60);\n  doc.setFontSize(14);\n  if (selectedOption === \"ACKRECEIPT\") {\n    doc.text(`ACKNOWLEDGEMENT RECEIPT`, 70, 75);\n  } else if (selectedOption === \"INV\") {\n    doc.text(`INVOICE`, 95, 75);\n  } else if (selectedOption === \"QUOTE\") {\n    doc.text(`QUOTATION`, 90, 75);\n  } else if (selectedOption === \"SOA\") {\n    doc.text(`STATEMENT OF ACCOUNT`, 70, 75);\n  } else if (selectedOption === \"PAYROLL\") {\n    doc.text(`PAYROLL`, 70, 75);\n  }\n\n  // Set the text to center align\n  const textWidth = doc.getTextWidth(inputData.Title);\n  const pageWidth = doc.internal.pageSize.width;\n  const centerX = (pageWidth - textWidth) / 2;\n\n  // Add the centered text to the PDF document\n  doc.text(`${inputData.Title}`, centerX, 85);\n  // ...\n\n  let startY = 100;\n  const totalSum = tableData.reduce((acc, row) => acc + row[4], 0);\n  const totalRow = [\"\", \"\", \"\", \"\", totalSum, \"\"];\n  doc.autoTable({\n    startY,\n    head: [[\"Description\", \"Quantity\", \"Unit\", \"Rate\", \"Total\", \"Remarks\"]],\n    // body: [...tableData, totalRow],\n    body: tableData.map(row => {\n      const {\n        description,\n        quantity,\n        unit,\n        rate,\n        remarks\n      } = row;\n      return [description, quantity, unit, rate, quantity * rate, remarks];\n    }),\n    theme: \"striped\"\n  });\n  doc.setFontSize(11);\n  if (selectedOption === \"QUOTE\") {\n    doc.text(`Terms and Agreemant`, 10, 175);\n    doc.text(`1. ${inputData.Downpayment}% downpayment`, 10, 185);\n  }\n\n  // Save the PDF document\n  doc.save(`${selectedOption} - ${inputData.DocNum} - ${inputData.Date} - ${inputData.To}.pdf`);\n};","map":{"version":3,"names":["jsPDF","generatePDF","selectedOption","inputData","tableData","doc","imgData","require","addImage","setFont","setFontSize","text","To","Address","Date","DocNum","textWidth","getTextWidth","Title","pageWidth","internal","pageSize","width","centerX","startY","totalSum","reduce","acc","row","totalRow","autoTable","head","body","map","description","quantity","unit","rate","remarks","theme","Downpayment","save"],"sources":["/Users/rejaverion/Documents/mfts_docugen/src/generateDoc.js"],"sourcesContent":["import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\n\nexport const generatePDF = (selectedOption, inputData, tableData) => {\n  const doc = new jsPDF();\n\n  // Load the image file\n  const imgData = require(\"./MFTS_logo.png\");\n  // Add the image to the PDF document\n  doc.addImage(\n    imgData,\n    \"PNG\",\n    55, // X coordinate of the image\n    10, // Y coordinate of the image\n    96, // Width of the image\n    30 // Height of the image\n  );\n\n  // Set the font and font size\n  doc.setFont(\"helvetica\");\n  doc.setFontSize(11);\n\n  // Add content to the PDF document using the input data\n  doc.text(`To: ${inputData.To}`, 10, 55);\n  doc.text(`Address: ${inputData.Address}`, 10, 60);\n  doc.text(`Date: ${inputData.Date}`, 150, 55);\n  doc.text(`Quote/Invoice#: ${inputData.DocNum}`, 150, 60);\n\n  doc.setFontSize(14);\n  if (selectedOption === \"ACKRECEIPT\") {\n    doc.text(`ACKNOWLEDGEMENT RECEIPT`, 70, 75);\n  } else if (selectedOption === \"INV\") {\n    doc.text(`INVOICE`, 95, 75);\n  } else if (selectedOption === \"QUOTE\") {\n    doc.text(`QUOTATION`, 90, 75);\n  } else if (selectedOption === \"SOA\") {\n    doc.text(`STATEMENT OF ACCOUNT`, 70, 75);\n  } else if (selectedOption === \"PAYROLL\") {\n    doc.text(`PAYROLL`, 70, 75);\n  }\n\n  // Set the text to center align\n  const textWidth = doc.getTextWidth(inputData.Title);\n  const pageWidth = doc.internal.pageSize.width;\n  const centerX = (pageWidth - textWidth) / 2;\n\n  // Add the centered text to the PDF document\n  doc.text(`${inputData.Title}`, centerX, 85);\n  // ...\n\n  let startY = 100;\n  const totalSum = tableData.reduce((acc, row) => acc + row[4], 0);\n  const totalRow = [\"\", \"\", \"\", \"\", totalSum, \"\"];\n  doc.autoTable({\n    startY,\n    head: [[\"Description\", \"Quantity\", \"Unit\", \"Rate\", \"Total\", \"Remarks\"]],\n    // body: [...tableData, totalRow],\n    body: tableData.map((row) => {\n      const { description, quantity, unit, rate, remarks } = row;\n      return [description, quantity, unit, rate, quantity * rate, remarks];\n    }),\n    theme: \"striped\",\n  });\n\n  doc.setFontSize(11);\n  if (selectedOption === \"QUOTE\") {\n    doc.text(`Terms and Agreemant`, 10, 175);\n    doc.text(`1. ${inputData.Downpayment}% downpayment`, 10, 185);\n  }\n\n  // Save the PDF document\n  doc.save(\n    `${selectedOption} - ${inputData.DocNum} - ${inputData.Date} - ${inputData.To}.pdf`\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}