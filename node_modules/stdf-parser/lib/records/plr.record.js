"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlrRecord = void 0;
const stdf_record_1 = require("../stdf-record");
class PlrRecord extends stdf_record_1.StdfRecord {
    grpCount;
    grpIndex;
    grpMode;
    grpRadix;
    pgmChar;
    rtnChar;
    pgmChal;
    rtnChal;
    constructor(type, sub, br) {
        super(type, sub, br);
        this.grpCount = br.readUInt16();
        this.grpIndex = new Array(this.grpCount ?? 0);
        if (this.grpCount) {
            for (let i = 0; i < this.grpCount; i++) {
                this.grpIndex[i] = br.readUInt16();
            }
        }
        if (br.remaining() === 0)
            return;
        this.grpMode = new Array(this.grpCount);
        if (this.grpCount) {
            for (let i = 0; i < this.grpCount; i++) {
                this.grpMode[i] = br.readUInt16();
            }
        }
        if (br.remaining() === 0)
            return;
        this.grpRadix = new Array(this.grpCount);
        if (this.grpCount) {
            for (let i = 0; i < this.grpCount; i++) {
                this.grpRadix[i] = br.readUInt8();
            }
        }
        if (br.remaining() === 0)
            return;
        this.pgmChar = new Array(this.grpCount ?? 0);
        if (this.grpCount) {
            for (let i = 0; i < this.grpCount; i++) {
                this.pgmChar[i] = br.readVarChar();
            }
        }
        if (br.remaining() === 0)
            return;
        this.rtnChar = new Array(this.grpCount ?? 0);
        if (this.grpCount) {
            for (let i = 0; i < this.grpCount; i++) {
                this.rtnChar[i] = br.readVarChar();
            }
        }
        if (br.remaining() === 0)
            return;
        this.pgmChal = new Array(this.grpCount ?? 0);
        if (this.grpCount) {
            for (let i = 0; i < this.grpCount; i++) {
                this.pgmChal[i] = br.readVarChar();
            }
        }
        if (br.remaining() === 0)
            return;
        this.rtnChal = new Array(this.grpCount ?? 0);
        if (this.grpCount) {
            for (let i = 0; i < this.grpCount; i++) {
                this.rtnChal[i] = br.readVarChar();
            }
        }
    }
}
exports.PlrRecord = PlrRecord;
//# sourceMappingURL=plr.record.js.map