/// <reference types="node" />
import { SmartBuffer } from 'smart-buffer';
import { EnumEndian } from './constants';
export declare class BufferReader {
    private readonly endian;
    readonly buffer: SmartBuffer;
    constructor(buffer: Buffer | SmartBuffer, endian: EnumEndian);
    readFixedString(length?: number): string | undefined;
    readVarString(): string | undefined;
    readVarChar(): string | undefined;
    readUInt8(): number | undefined;
    readUInt16(): number | undefined;
    readUInt32(): number | undefined;
    readInt8(): number | undefined;
    readInt16(): number | undefined;
    readInt32(): number | undefined;
    readFloat(): number | undefined;
    readDouble(): number | undefined;
    readFixedBuffer(length?: number): Buffer | undefined;
    readVarBuffer(): Buffer | undefined;
    readBitBuffer(): Buffer | undefined;
    readDate(): Date | undefined;
    readChar(): string | undefined;
    readNibble(): [number, number] | undefined;
    readVarData(length: number): unknown[] | undefined;
    remaining(): number;
}
