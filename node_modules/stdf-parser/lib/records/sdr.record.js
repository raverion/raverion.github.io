"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SdrRecord = void 0;
const stdf_record_1 = require("../stdf-record");
class SdrRecord extends stdf_record_1.StdfRecord {
    headNum;
    siteGrp;
    siteCount;
    siteNums;
    handlerType;
    handlerId;
    cardType;
    cardId;
    loadType;
    loadId;
    dibType;
    dibId;
    cableType;
    cableId;
    contactorType;
    contactorId;
    laserType;
    laserId;
    extraType;
    extraId;
    constructor(type, sub, br) {
        super(type, sub, br);
        this.headNum = br.readUInt8();
        this.siteGrp = br.readUInt8();
        this.siteCount = br.readUInt8();
        this.siteNums = new Array(this.siteCount ?? 0);
        if (this.siteCount) {
            for (let i = 0; i < this.siteCount; i++) {
                this.siteNums[i] = br.readUInt8();
            }
        }
        this.handlerType = br.readVarString();
        this.handlerId = br.readVarString();
        this.cardType = br.readVarString();
        this.cardId = br.readVarString();
        this.loadType = br.readVarString();
        this.loadId = br.readVarString();
        this.dibType = br.readVarString();
        this.dibId = br.readVarString();
        this.cableType = br.readVarString();
        this.cableId = br.readVarString();
        this.contactorType = br.readVarString();
        this.contactorId = br.readVarString();
        this.laserType = br.readVarString();
        this.laserId = br.readVarString();
        this.extraType = br.readVarString();
        this.extraId = br.readVarString();
    }
}
exports.SdrRecord = SdrRecord;
//# sourceMappingURL=sdr.record.js.map