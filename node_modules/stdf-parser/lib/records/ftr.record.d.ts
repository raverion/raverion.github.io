/// <reference types="node" />
import { BufferReader } from '../buffer-reader';
import { StdfRecord } from '../stdf-record';
export declare enum EnumFtrTestFlag {
    ALARM = 1,
    RESERVED = 2,
    unreliable = 4,
    timeout = 8,
    notExecute = 16,
    abort = 32,
    noPassFail = 64,
    failed = 128
}
export declare enum EnumFtrOptFlag {
    invalidCycleCount = 1,
    invalidRelVAddr = 2,
    invalidRepeatCount = 4,
    invalidNumFail = 8,
    invalidXYFailAddr = 16,
    invalidVectOff = 32
}
export declare class FtrRecord extends StdfRecord {
    testNum?: number;
    headNum?: number;
    siteNum?: number;
    testFlag?: EnumFtrTestFlag;
    optFlag?: number;
    cycleCount?: number;
    relVAddr?: number;
    repeatCount?: number;
    numFail?: number;
    xFailAddr?: number;
    yFailAddr?: number;
    vectOff?: number;
    rtnCount?: number;
    pgmCount?: number;
    rtnIndexes: Array<number | undefined>;
    rtnStats: Array<number | undefined>;
    pgmIndexes: Array<number | undefined>;
    pgmStats: Array<number | undefined>;
    failPin?: Buffer;
    vectName?: string;
    timeSet?: string;
    opCode?: string;
    testTxt?: string;
    alarmId?: string;
    progTxt?: string;
    resultTxt?: string;
    patgNum?: number | null;
    spinMap?: Buffer | null;
    constructor(type: number, sub: number, br: BufferReader);
}
