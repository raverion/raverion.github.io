{"ast":null,"code":"import jsPDF from \"jspdf\";\nexport const generatePDF = (selectedOption, inputData) => {\n  const doc = new jsPDF();\n\n  // Load the image file\n  const imgData = require(\"./MFTS_logo.png\");\n  // Add the image to the PDF document\n  doc.addImage(imgData, \"PNG\", 50,\n  // X coordinate of the image\n  10,\n  // Y coordinate of the image\n  96,\n  // Width of the image\n  30 // Height of the image\n  );\n\n  // Set the font and font size\n  doc.setFont(\"helvetica\");\n  doc.setFontSize(11);\n\n  // Add content to the PDF document using the input data\n  doc.text(`To: ${inputData.To}`, 10, 55);\n  doc.text(`Address: ${inputData.Address}`, 10, 60);\n  doc.text(`Date: ${inputData.Date}`, 150, 55);\n  doc.text(`Quote/Invoice#: ${inputData.DocNum}`, 150, 60);\n  doc.setFontSize(14);\n  if (selectedOption === \"ACKRECEIPT\") {\n    doc.text(`ACKNOWLEDGEMENT RECEIPT`, 70, 75);\n  } else if (selectedOption === \"INV\") {\n    doc.text(`INVOICE`, 95, 75);\n  } else if (selectedOption === \"QUOTE\") {\n    doc.text(`QUOTATION`, 90, 75);\n  } else if (selectedOption === \"SOA\") {\n    doc.text(`STATEMENT OF ACCOUNT`, 70, 75);\n  } else if (selectedOption === \"PAYROLL\") {\n    doc.text(`PAYROLL`, 70, 75);\n  }\n  // ...\n\n  let startY = 90;\n  doc.autoTable({\n    startY,\n    head: [[\"Description\", \"Quantity\", \"Unit\", \"Rate\", \"Total\", \"Remarks\"]],\n    body: tableData.map(row => {\n      const {\n        label,\n        quantity,\n        unit,\n        rate,\n        remarks\n      } = row;\n      const total = quantity * rate;\n      return [label, quantity, unit, rate, total, remarks];\n    }),\n    theme: \"striped\"\n  });\n\n  // Save the PDF document\n  doc.save(`${selectedOption} - ${inputData.DocNum} - ${inputData.Date} - ${inputData.To}.pdf`);\n};","map":{"version":3,"names":["jsPDF","generatePDF","selectedOption","inputData","doc","imgData","require","addImage","setFont","setFontSize","text","To","Address","Date","DocNum","startY","autoTable","head","body","tableData","map","row","label","quantity","unit","rate","remarks","total","theme","save"],"sources":["/Users/rejaverion/Documents/mfts_docugen/src/generateDoc.js"],"sourcesContent":["import jsPDF from \"jspdf\";\n\nexport const generatePDF = (selectedOption, inputData) => {\n  const doc = new jsPDF();\n\n  // Load the image file\n  const imgData = require(\"./MFTS_logo.png\");\n  // Add the image to the PDF document\n  doc.addImage(\n    imgData,\n    \"PNG\",\n    50, // X coordinate of the image\n    10, // Y coordinate of the image\n    96, // Width of the image\n    30 // Height of the image\n  );\n\n  // Set the font and font size\n  doc.setFont(\"helvetica\");\n  doc.setFontSize(11);\n\n  // Add content to the PDF document using the input data\n  doc.text(`To: ${inputData.To}`, 10, 55);\n  doc.text(`Address: ${inputData.Address}`, 10, 60);\n  doc.text(`Date: ${inputData.Date}`, 150, 55);\n  doc.text(`Quote/Invoice#: ${inputData.DocNum}`, 150, 60);\n\n  doc.setFontSize(14);\n  if (selectedOption === \"ACKRECEIPT\") {\n    doc.text(`ACKNOWLEDGEMENT RECEIPT`, 70, 75);\n  } else if (selectedOption === \"INV\") {\n    doc.text(`INVOICE`, 95, 75);\n  } else if (selectedOption === \"QUOTE\") {\n    doc.text(`QUOTATION`, 90, 75);\n  } else if (selectedOption === \"SOA\") {\n    doc.text(`STATEMENT OF ACCOUNT`, 70, 75);\n  } else if (selectedOption === \"PAYROLL\") {\n    doc.text(`PAYROLL`, 70, 75);\n  }\n  // ...\n\n  let startY = 90;\n  doc.autoTable({\n    startY,\n    head: [[\"Description\", \"Quantity\", \"Unit\", \"Rate\", \"Total\", \"Remarks\"]],\n    body: tableData.map((row) => {\n      const { label, quantity, unit, rate, remarks } = row;\n      const total = quantity * rate;\n      return [label, quantity, unit, rate, total, remarks];\n    }),\n    theme: \"striped\",\n  });\n\n  // Save the PDF document\n  doc.save(\n    `${selectedOption} - ${inputData.DocNum} - ${inputData.Date} - ${inputData.To}.pdf`\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,WAAW,GAAGA,CAACC,cAAc,EAAEC,SAAS,KAAK;EACxD,MAAMC,GAAG,GAAG,IAAIJ,KAAK,EAAE;;EAEvB;EACA,MAAMK,OAAO,GAAGC,OAAO,CAAC,iBAAiB,CAAC;EAC1C;EACAF,GAAG,CAACG,QAAQ,CACVF,OAAO,EACP,KAAK,EACL,EAAE;EAAE;EACJ,EAAE;EAAE;EACJ,EAAE;EAAE;EACJ,EAAE,CAAC;EAAA,CACJ;;EAED;EACAD,GAAG,CAACI,OAAO,CAAC,WAAW,CAAC;EACxBJ,GAAG,CAACK,WAAW,CAAC,EAAE,CAAC;;EAEnB;EACAL,GAAG,CAACM,IAAI,CAAE,OAAMP,SAAS,CAACQ,EAAG,EAAC,EAAE,EAAE,EAAE,EAAE,CAAC;EACvCP,GAAG,CAACM,IAAI,CAAE,YAAWP,SAAS,CAACS,OAAQ,EAAC,EAAE,EAAE,EAAE,EAAE,CAAC;EACjDR,GAAG,CAACM,IAAI,CAAE,SAAQP,SAAS,CAACU,IAAK,EAAC,EAAE,GAAG,EAAE,EAAE,CAAC;EAC5CT,GAAG,CAACM,IAAI,CAAE,mBAAkBP,SAAS,CAACW,MAAO,EAAC,EAAE,GAAG,EAAE,EAAE,CAAC;EAExDV,GAAG,CAACK,WAAW,CAAC,EAAE,CAAC;EACnB,IAAIP,cAAc,KAAK,YAAY,EAAE;IACnCE,GAAG,CAACM,IAAI,CAAE,yBAAwB,EAAE,EAAE,EAAE,EAAE,CAAC;EAC7C,CAAC,MAAM,IAAIR,cAAc,KAAK,KAAK,EAAE;IACnCE,GAAG,CAACM,IAAI,CAAE,SAAQ,EAAE,EAAE,EAAE,EAAE,CAAC;EAC7B,CAAC,MAAM,IAAIR,cAAc,KAAK,OAAO,EAAE;IACrCE,GAAG,CAACM,IAAI,CAAE,WAAU,EAAE,EAAE,EAAE,EAAE,CAAC;EAC/B,CAAC,MAAM,IAAIR,cAAc,KAAK,KAAK,EAAE;IACnCE,GAAG,CAACM,IAAI,CAAE,sBAAqB,EAAE,EAAE,EAAE,EAAE,CAAC;EAC1C,CAAC,MAAM,IAAIR,cAAc,KAAK,SAAS,EAAE;IACvCE,GAAG,CAACM,IAAI,CAAE,SAAQ,EAAE,EAAE,EAAE,EAAE,CAAC;EAC7B;EACA;;EAEA,IAAIK,MAAM,GAAG,EAAE;EACfX,GAAG,CAACY,SAAS,CAAC;IACZD,MAAM;IACNE,IAAI,EAAE,CAAC,CAAC,aAAa,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;IACvEC,IAAI,EAAEC,SAAS,CAACC,GAAG,CAAEC,GAAG,IAAK;MAC3B,MAAM;QAAEC,KAAK;QAAEC,QAAQ;QAAEC,IAAI;QAAEC,IAAI;QAAEC;MAAQ,CAAC,GAAGL,GAAG;MACpD,MAAMM,KAAK,GAAGJ,QAAQ,GAAGE,IAAI;MAC7B,OAAO,CAACH,KAAK,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,IAAI,EAAEE,KAAK,EAAED,OAAO,CAAC;IACtD,CAAC,CAAC;IACFE,KAAK,EAAE;EACT,CAAC,CAAC;;EAEF;EACAxB,GAAG,CAACyB,IAAI,CACL,GAAE3B,cAAe,MAAKC,SAAS,CAACW,MAAO,MAAKX,SAAS,CAACU,IAAK,MAAKV,SAAS,CAACQ,EAAG,MAAK,CACpF;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}